[{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"","permalink":"http://localhost:1313/notes/swe/","summary":"","title":""},{"content":"","permalink":"http://localhost:1313/notes/swe/","summary":"","title":"Cambridge Medicine"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"","permalink":"http://localhost:1313/notes/swe/","summary":"","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"","permalink":"http://localhost:1313/notes/swe/","summary":"","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"","permalink":"http://localhost:1313/notes/swe/","summary":"","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"","permalink":"http://localhost:1313/notes/swe/","summary":"","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical More career-focused Expensive Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost Independence allows personalised learning Can get overwhelmed with resources No formal credential Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\n| | Description | Pros | Cons |\n| Computer science degree | 3-4 year university program | Credibility which opens research/advanced roles | Expensive and time-consuming Less practical coding experience | | Coding Bootcamp | 3-6 month intensive, project-based coding course | Fast and practical More career-focused | Expensive Narrow scope | | Self-learning | Learn via online courses and projects | Flexible and low-cost Independence allows personalised learning | Can get overwhelmed with resources No formal credential Requires discipline |\nIt’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical More career-focused Expensive Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost Independence allows personalised learning Can get overwhelmed with resources No formal credential Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consumingLess practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical More career-focused Expensive Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost Independence allows personalised learning Can get overwhelmed with resources No formal credential Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical More career-focused Expensive Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost Independence allows personalised learning Can get overwhelmed with resources No formal credential Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical More career-focused Expensive Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost Independence allows personalised learning Can get overwhelmed with resources No formal credential Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practicalMore career-focused Expensive Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost Independence allows personalised learning Can get overwhelmed with resources No formal credential Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost Independence allows personalised learning Can get overwhelmed with resources No formal credential Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost Independence allows personalised learning Can get overwhelmed with resources No formal credential Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources No formal credential Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with [Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with [Harvard CS50x], completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with [CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with [CS50P] (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and [CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and [CS50W] (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\n[Harvard CS50x] (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\n[Harvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp]: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\n[FreeCodeCamp]: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\n[FreeCodeCamp]: good for practice, but too hand-holdy and outdated. [Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\n[FreeCodeCamp]: good for practice, but too hand-holdy and outdated. [Full Stack Open]: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\n[FreeCodeCamp]: good for practice, but too hand-holdy and outdated. [Full Stack Open]: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\n[FreeCodeCamp]: good for practice, but too hand-holdy and outdated. [Full Stack Open]: solid content, but a steep start and clunky UI. [The Odin Project (TOP)]: clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. [Full Stack Open]: solid content, but a steep start and clunky UI. [The Odin Project (TOP)]: clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. [The Odin Project (TOP)]: clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). [Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks ","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks ","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is simply to start. Build projects, experiment, and learn as you go. Courses and resources can guide you, but progress comes from taking action and iterating along the way.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start. Build projects, experiment, and learn as you go. Courses and resources can guide you, but progress comes from taking action and iterating along the way.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start. Build projects and learning as you go is key. Courses and resources can guide you, but progress comes from taking action and iterating along the way.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start. Find out where you want to and reverse engineer to\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start. Find out where you want to and reverse engineer to choose the best resources today\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start. Find out where you want to and reverse engineer to choose the best resources today.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start. Find out where you want to and reverse engineer to choose the best resources today. Courses and resources can guide you, but progress comes from taking action and iterating along the way.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start. Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to star somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to star (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). \u0026ldquo;Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). **Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting [daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting [daily progress on X] to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting my daily progress on X](https://x.com/kprabhu04) to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting my daily progress on X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting my daily progress on my X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on my X to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on my X/Twitter to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on **my X/Twitter to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on *my X/Twitter to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on *my X/Twitter* to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on *my X/Twitter to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on *my X/Twitter* to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on *my X/Twitter** to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on *my X/Twitter to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on my X/Twitter to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start (somewhere). Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"},{"content":"Introduction Hello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\n","permalink":"http://localhost:1313/notes/year1notes/","summary":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHello there! Cambridge medicine is quite difficult, I\u0026rsquo;ll be writing some thoughts on how to go about this here over the next few weeks - stay tuned!\u003c/p\u003e","title":"Cambridge Medicine"},{"content":"I went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: build things and learn along the way. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\nGenerally there are 3 main routes to learn software engineering:\nDescription Pros Cons Computer science degree 3-4 year university program Credibility which opens research/advanced roles Expensive and time-consuming, Less practical coding experience Coding Bootcamp 3-6 month intensive, project-based coding course Fast and practical, More career-focused Expensive, Narrow scope Self-learning Learn via online courses and projects Flexible and low-cost, Independence allows personalised learning Can get overwhelmed with resources, No formal credential, Requires discipline It’s quite difficult for an institution to teach a subject that will completely change by the time of graduation, and coding bootmaps don’t fare much better. Either way, you’ll have to be a self-learner. The rest of this article outlines some of the resources I found quite helpful. These are all open-source (free) and are maintained to a high level.\nHarvard CS50x (Fundamentals) I started with Harvard CS50x, completing the 11-week course in 2 weeks by 2x lecture speed and going through problem sets late into the night. It’s quite difficult but perfect for programming fundamentals. I followed it up with CS50P (Python) and CS50W (Web development). However, while good for fundamentals, it doesn’t teach the systems thinking needed to build scalable solutions.\nThe Odin Project (Fullstack) Regarding open-source fullstack courses, there seems to be 3 main options\nFreeCodeCamp: good for practice, but too hand-holdy and outdated. Full Stack Open: solid content, but a steep start and clunky UI. The Odin Project (TOP): clear, project-based, structured — the best fit. I started TOP after CS50, finishing the foundations in a week and started posting daily progress on my X/Twitter to stay accountable. I chose the JavaScript pathway over Ruby for its versatility, strong community, and relevance to healthtech. NB you don’t need to install Linux on windows, you can just run everything on VScode, so feel free to skip this part of the setup process.\nKaggle (AI/ML) There seems to be an ever increasing amount of AI/ML courses. Rather than learning the PhD-level maths to build foundational models and will probably change by the time you learn it, it seems more practical to focus on implementing AI using existing tools since much of the maths is done by libraries made for you (e.g. PyTorch). Kaggle is really good for a project-based framework to teach you the key concepts only.\nFinal remarks The most important step is to start. Decide where you want to go, then reverse-engineer a path and choose the best resources. Courses can guide you, but real progress comes from taking action and iterating as you learn.\n","permalink":"http://localhost:1313/notes/swe/","summary":"\u003cp\u003eI went through countless articles and videos looking for the best way to learn software engineering. While it’s a vast field, the answer turned out simple: \u003cstrong\u003ebuild things and learn along the way\u003c/strong\u003e. It’s the most effective way to ensure what you’re learning is relevant and practical. However, there are some extremely useful courses to help you stay on track.\u003c/p\u003e\n\u003cp\u003eGenerally there are 3 main routes to learn software engineering:\u003c/p\u003e","title":"How I’m Teaching Myself Software Engineering and AI/ML"},{"content":"The MedTech Innovation Programme As part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\n","permalink":"http://localhost:1313/projects/medtechip/","summary":"\u003ch2 id=\"the-medtech-innovation-programme\"\u003eThe MedTech Innovation Programme\u003c/h2\u003e\n\u003cp\u003eAs part of the Innovation Programme 2024/25, we aim to design a low-cost, bedside diagnostic solution for cerebrospinal fluid (CSF) analysis. This device will improve accessibility, speed, and accuracy of CSF testing, enhancing patient care, especially in resource-limited settings.\u003c/p\u003e","title":"MedTech IP"},{"content":"Results: 1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264) 2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267) 3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\nModules: First Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\nSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\nThird Year: intercalating in the highly competitive Management Studies course at the Cambridge Judge Business School\n","permalink":"http://localhost:1313/experience/medicine/","summary":"\u003ch3 id=\"results\"\u003eResults:\u003c/h3\u003e\n\u003cp\u003e1st Year (MedST IA): 1st Class (76.33%) - Ranked 21st in Cohort (21/264)\n2nd Year (MedST IB): 1st Class (76.66%) - Ranked 12th in Cohort (12/267)\n3rd Year (MST): 1st Class with Distinction (75.63%) - Ranked 2nd in Cohort (2/44)\u003c/p\u003e\n\u003ch3 id=\"modules\"\u003eModules:\u003c/h3\u003e\n\u003cp\u003eFirst Year Modules: Anatomy, Physiology, Biochemistry, Statistics, Social Contexts of Health \u0026amp; Illness, Medical Ethics \u0026amp; Law.\u003c/p\u003e\n\u003cp\u003eSecond Year Modules: Head \u0026amp; Neck Anatomy, Human Reproduction, Pathology, Pharmacology, Neurobiology, and Psychology.\u003c/p\u003e","title":"Medical degree"},{"content":"Intercalation in Management Studies Tripos.\nModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\n","permalink":"http://localhost:1313/experience/management/","summary":"\u003cp\u003eIntercalation in Management Studies Tripos.\u003c/p\u003e\n\u003cp\u003eModules include: Organisational Behaviour, Quantitative Methods, Economics of Firms \u0026amp; Markets, Accounting \u0026amp; Finance, Operations Management, Marketing, Negotiation workshops and Consulting projects.\u003c/p\u003e","title":"Management Studies degree"}]